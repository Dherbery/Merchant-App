package com.google.android.gms.internal.mlkit_vision_barcode;

import androidx.appcompat.app.AppCompatDelegate;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.3.0 */
/* loaded from: classes4.dex */
final class zzkh implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzkh zza = new zzkh();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzfc zzfcVar = new zzfc();
        zzfcVar.zza(1);
        zzb = builder.withProperty(zzfcVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzfc zzfcVar2 = new zzfc();
        zzfcVar2.zza(2);
        zzc = builder2.withProperty(zzfcVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzfc zzfcVar3 = new zzfc();
        zzfcVar3.zza(37);
        zzd = builder3.withProperty(zzfcVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzfc zzfcVar4 = new zzfc();
        zzfcVar4.zza(61);
        zze = builder4.withProperty(zzfcVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzfc zzfcVar5 = new zzfc();
        zzfcVar5.zza(3);
        zzf = builder5.withProperty(zzfcVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzfc zzfcVar6 = new zzfc();
        zzfcVar6.zza(20);
        zzg = builder6.withProperty(zzfcVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzfc zzfcVar7 = new zzfc();
        zzfcVar7.zza(4);
        zzh = builder7.withProperty(zzfcVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzfc zzfcVar8 = new zzfc();
        zzfcVar8.zza(29);
        zzi = builder8.withProperty(zzfcVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzfc zzfcVar9 = new zzfc();
        zzfcVar9.zza(5);
        zzj = builder9.withProperty(zzfcVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzfc zzfcVar10 = new zzfc();
        zzfcVar10.zza(59);
        zzk = builder10.withProperty(zzfcVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzfc zzfcVar11 = new zzfc();
        zzfcVar11.zza(6);
        zzl = builder11.withProperty(zzfcVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzfc zzfcVar12 = new zzfc();
        zzfcVar12.zza(79);
        zzm = builder12.withProperty(zzfcVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzfc zzfcVar13 = new zzfc();
        zzfcVar13.zza(7);
        zzn = builder13.withProperty(zzfcVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzfc zzfcVar14 = new zzfc();
        zzfcVar14.zza(58);
        zzo = builder14.withProperty(zzfcVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzfc zzfcVar15 = new zzfc();
        zzfcVar15.zza(48);
        zzp = builder15.withProperty(zzfcVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzfc zzfcVar16 = new zzfc();
        zzfcVar16.zza(49);
        zzq = builder16.withProperty(zzfcVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzfc zzfcVar17 = new zzfc();
        zzfcVar17.zza(18);
        zzr = builder17.withProperty(zzfcVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzfc zzfcVar18 = new zzfc();
        zzfcVar18.zza(26);
        zzs = builder18.withProperty(zzfcVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzfc zzfcVar19 = new zzfc();
        zzfcVar19.zza(27);
        zzt = builder19.withProperty(zzfcVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzfc zzfcVar20 = new zzfc();
        zzfcVar20.zza(28);
        zzu = builder20.withProperty(zzfcVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzfc zzfcVar21 = new zzfc();
        zzfcVar21.zza(44);
        zzv = builder21.withProperty(zzfcVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzfc zzfcVar22 = new zzfc();
        zzfcVar22.zza(45);
        zzw = builder22.withProperty(zzfcVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzfc zzfcVar23 = new zzfc();
        zzfcVar23.zza(19);
        zzx = builder23.withProperty(zzfcVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzfc zzfcVar24 = new zzfc();
        zzfcVar24.zza(21);
        zzy = builder24.withProperty(zzfcVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzfc zzfcVar25 = new zzfc();
        zzfcVar25.zza(22);
        zzz = builder25.withProperty(zzfcVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzfc zzfcVar26 = new zzfc();
        zzfcVar26.zza(8);
        zzA = builder26.withProperty(zzfcVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzfc zzfcVar27 = new zzfc();
        zzfcVar27.zza(9);
        zzB = builder27.withProperty(zzfcVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzfc zzfcVar28 = new zzfc();
        zzfcVar28.zza(10);
        zzC = builder28.withProperty(zzfcVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzfc zzfcVar29 = new zzfc();
        zzfcVar29.zza(11);
        zzD = builder29.withProperty(zzfcVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzfc zzfcVar30 = new zzfc();
        zzfcVar30.zza(12);
        zzE = builder30.withProperty(zzfcVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzfc zzfcVar31 = new zzfc();
        zzfcVar31.zza(13);
        zzF = builder31.withProperty(zzfcVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzfc zzfcVar32 = new zzfc();
        zzfcVar32.zza(14);
        zzG = builder32.withProperty(zzfcVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzfc zzfcVar33 = new zzfc();
        zzfcVar33.zza(15);
        zzH = builder33.withProperty(zzfcVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzfc zzfcVar34 = new zzfc();
        zzfcVar34.zza(16);
        zzI = builder34.withProperty(zzfcVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzfc zzfcVar35 = new zzfc();
        zzfcVar35.zza(17);
        zzJ = builder35.withProperty(zzfcVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzfc zzfcVar36 = new zzfc();
        zzfcVar36.zza(23);
        zzK = builder36.withProperty(zzfcVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzfc zzfcVar37 = new zzfc();
        zzfcVar37.zza(24);
        zzL = builder37.withProperty(zzfcVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzfc zzfcVar38 = new zzfc();
        zzfcVar38.zza(25);
        zzM = builder38.withProperty(zzfcVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzfc zzfcVar39 = new zzfc();
        zzfcVar39.zza(39);
        zzN = builder39.withProperty(zzfcVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzfc zzfcVar40 = new zzfc();
        zzfcVar40.zza(40);
        zzO = builder40.withProperty(zzfcVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzfc zzfcVar41 = new zzfc();
        zzfcVar41.zza(30);
        zzP = builder41.withProperty(zzfcVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzfc zzfcVar42 = new zzfc();
        zzfcVar42.zza(31);
        zzQ = builder42.withProperty(zzfcVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzfc zzfcVar43 = new zzfc();
        zzfcVar43.zza(32);
        zzR = builder43.withProperty(zzfcVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzfc zzfcVar44 = new zzfc();
        zzfcVar44.zza(33);
        zzS = builder44.withProperty(zzfcVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzfc zzfcVar45 = new zzfc();
        zzfcVar45.zza(34);
        zzT = builder45.withProperty(zzfcVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzfc zzfcVar46 = new zzfc();
        zzfcVar46.zza(35);
        zzU = builder46.withProperty(zzfcVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzfc zzfcVar47 = new zzfc();
        zzfcVar47.zza(36);
        zzV = builder47.withProperty(zzfcVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzfc zzfcVar48 = new zzfc();
        zzfcVar48.zza(46);
        zzW = builder48.withProperty(zzfcVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzfc zzfcVar49 = new zzfc();
        zzfcVar49.zza(47);
        zzX = builder49.withProperty(zzfcVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzfc zzfcVar50 = new zzfc();
        zzfcVar50.zza(69);
        zzY = builder50.withProperty(zzfcVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzfc zzfcVar51 = new zzfc();
        zzfcVar51.zza(42);
        zzZ = builder51.withProperty(zzfcVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzfc zzfcVar52 = new zzfc();
        zzfcVar52.zza(50);
        zzaa = builder52.withProperty(zzfcVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzfc zzfcVar53 = new zzfc();
        zzfcVar53.zza(51);
        zzab = builder53.withProperty(zzfcVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzfc zzfcVar54 = new zzfc();
        zzfcVar54.zza(52);
        zzac = builder54.withProperty(zzfcVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzfc zzfcVar55 = new zzfc();
        zzfcVar55.zza(53);
        zzad = builder55.withProperty(zzfcVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzfc zzfcVar56 = new zzfc();
        zzfcVar56.zza(54);
        zzae = builder56.withProperty(zzfcVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzfc zzfcVar57 = new zzfc();
        zzfcVar57.zza(60);
        zzaf = builder57.withProperty(zzfcVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzfc zzfcVar58 = new zzfc();
        zzfcVar58.zza(85);
        zzag = builder58.withProperty(zzfcVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzfc zzfcVar59 = new zzfc();
        zzfcVar59.zza(86);
        zzah = builder59.withProperty(zzfcVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzfc zzfcVar60 = new zzfc();
        zzfcVar60.zza(87);
        zzai = builder60.withProperty(zzfcVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzfc zzfcVar61 = new zzfc();
        zzfcVar61.zza(55);
        zzaj = builder61.withProperty(zzfcVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzfc zzfcVar62 = new zzfc();
        zzfcVar62.zza(56);
        zzak = builder62.withProperty(zzfcVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzfc zzfcVar63 = new zzfc();
        zzfcVar63.zza(57);
        zzal = builder63.withProperty(zzfcVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzfc zzfcVar64 = new zzfc();
        zzfcVar64.zza(62);
        zzam = builder64.withProperty(zzfcVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzfc zzfcVar65 = new zzfc();
        zzfcVar65.zza(63);
        zzan = builder65.withProperty(zzfcVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzfc zzfcVar66 = new zzfc();
        zzfcVar66.zza(64);
        zzao = builder66.withProperty(zzfcVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzfc zzfcVar67 = new zzfc();
        zzfcVar67.zza(65);
        zzap = builder67.withProperty(zzfcVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzfc zzfcVar68 = new zzfc();
        zzfcVar68.zza(66);
        zzaq = builder68.withProperty(zzfcVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzfc zzfcVar69 = new zzfc();
        zzfcVar69.zza(67);
        zzar = builder69.withProperty(zzfcVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzfc zzfcVar70 = new zzfc();
        zzfcVar70.zza(68);
        zzas = builder70.withProperty(zzfcVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzfc zzfcVar71 = new zzfc();
        zzfcVar71.zza(70);
        zzat = builder71.withProperty(zzfcVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzfc zzfcVar72 = new zzfc();
        zzfcVar72.zza(71);
        zzau = builder72.withProperty(zzfcVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzfc zzfcVar73 = new zzfc();
        zzfcVar73.zza(72);
        zzav = builder73.withProperty(zzfcVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzfc zzfcVar74 = new zzfc();
        zzfcVar74.zza(73);
        zzaw = builder74.withProperty(zzfcVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzfc zzfcVar75 = new zzfc();
        zzfcVar75.zza(74);
        zzax = builder75.withProperty(zzfcVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzfc zzfcVar76 = new zzfc();
        zzfcVar76.zza(75);
        zzay = builder76.withProperty(zzfcVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzfc zzfcVar77 = new zzfc();
        zzfcVar77.zza(76);
        zzaz = builder77.withProperty(zzfcVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzfc zzfcVar78 = new zzfc();
        zzfcVar78.zza(77);
        zzaA = builder78.withProperty(zzfcVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzfc zzfcVar79 = new zzfc();
        zzfcVar79.zza(78);
        zzaB = builder79.withProperty(zzfcVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzfc zzfcVar80 = new zzfc();
        zzfcVar80.zza(80);
        zzaC = builder80.withProperty(zzfcVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzfc zzfcVar81 = new zzfc();
        zzfcVar81.zza(81);
        zzaD = builder81.withProperty(zzfcVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzfc zzfcVar82 = new zzfc();
        zzfcVar82.zza(82);
        zzaE = builder82.withProperty(zzfcVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzfc zzfcVar83 = new zzfc();
        zzfcVar83.zza(83);
        zzaF = builder83.withProperty(zzfcVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzfc zzfcVar84 = new zzfc();
        zzfcVar84.zza(84);
        zzaG = builder84.withProperty(zzfcVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzfc zzfcVar85 = new zzfc();
        zzfcVar85.zza(88);
        zzaH = builder85.withProperty(zzfcVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzfc zzfcVar86 = new zzfc();
        zzfcVar86.zza(89);
        zzaI = builder86.withProperty(zzfcVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzfc zzfcVar87 = new zzfc();
        zzfcVar87.zza(90);
        zzaJ = builder87.withProperty(zzfcVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzfc zzfcVar88 = new zzfc();
        zzfcVar88.zza(91);
        zzaK = builder88.withProperty(zzfcVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzfc zzfcVar89 = new zzfc();
        zzfcVar89.zza(92);
        zzaL = builder89.withProperty(zzfcVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzfc zzfcVar90 = new zzfc();
        zzfcVar90.zza(93);
        zzaM = builder90.withProperty(zzfcVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzfc zzfcVar91 = new zzfc();
        zzfcVar91.zza(94);
        zzaN = builder91.withProperty(zzfcVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzfc zzfcVar92 = new zzfc();
        zzfcVar92.zza(95);
        zzaO = builder92.withProperty(zzfcVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzfc zzfcVar93 = new zzfc();
        zzfcVar93.zza(96);
        zzaP = builder93.withProperty(zzfcVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzfc zzfcVar94 = new zzfc();
        zzfcVar94.zza(97);
        zzaQ = builder94.withProperty(zzfcVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzfc zzfcVar95 = new zzfc();
        zzfcVar95.zza(98);
        zzaR = builder95.withProperty(zzfcVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzfc zzfcVar96 = new zzfc();
        zzfcVar96.zza(99);
        zzaS = builder96.withProperty(zzfcVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzfc zzfcVar97 = new zzfc();
        zzfcVar97.zza(100);
        zzaT = builder97.withProperty(zzfcVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzfc zzfcVar98 = new zzfc();
        zzfcVar98.zza(101);
        zzaU = builder98.withProperty(zzfcVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzfc zzfcVar99 = new zzfc();
        zzfcVar99.zza(102);
        zzaV = builder99.withProperty(zzfcVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzfc zzfcVar100 = new zzfc();
        zzfcVar100.zza(103);
        zzaW = builder100.withProperty(zzfcVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzfc zzfcVar101 = new zzfc();
        zzfcVar101.zza(104);
        zzaX = builder101.withProperty(zzfcVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzfc zzfcVar102 = new zzfc();
        zzfcVar102.zza(105);
        zzaY = builder102.withProperty(zzfcVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzfc zzfcVar103 = new zzfc();
        zzfcVar103.zza(106);
        zzaZ = builder103.withProperty(zzfcVar103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzfc zzfcVar104 = new zzfc();
        zzfcVar104.zza(107);
        zzba = builder104.withProperty(zzfcVar104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzfc zzfcVar105 = new zzfc();
        zzfcVar105.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR);
        zzbb = builder105.withProperty(zzfcVar105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzfc zzfcVar106 = new zzfc();
        zzfcVar106.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY);
        zzbc = builder106.withProperty(zzfcVar106.zzb()).build();
    }

    private zzkh() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzpn zzpnVar = (zzpn) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzpnVar.zzg());
        objectEncoderContext2.add(zzc, zzpnVar.zzc());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, zzpnVar.zzb());
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, zzpnVar.zzd());
        objectEncoderContext2.add(zzo, zzpnVar.zze());
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, zzpnVar.zza());
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
        objectEncoderContext2.add(zzax, (Object) null);
        objectEncoderContext2.add(zzay, (Object) null);
        objectEncoderContext2.add(zzaz, (Object) null);
        objectEncoderContext2.add(zzaA, (Object) null);
        objectEncoderContext2.add(zzaB, (Object) null);
        objectEncoderContext2.add(zzaC, (Object) null);
        objectEncoderContext2.add(zzaD, (Object) null);
        objectEncoderContext2.add(zzaE, (Object) null);
        objectEncoderContext2.add(zzaF, (Object) null);
        objectEncoderContext2.add(zzaG, (Object) null);
        objectEncoderContext2.add(zzaH, (Object) null);
        objectEncoderContext2.add(zzaI, (Object) null);
        objectEncoderContext2.add(zzaJ, (Object) null);
        objectEncoderContext2.add(zzaK, (Object) null);
        objectEncoderContext2.add(zzaL, (Object) null);
        objectEncoderContext2.add(zzaM, (Object) null);
        objectEncoderContext2.add(zzaN, (Object) null);
        objectEncoderContext2.add(zzaO, (Object) null);
        objectEncoderContext2.add(zzaP, (Object) null);
        objectEncoderContext2.add(zzaQ, (Object) null);
        objectEncoderContext2.add(zzaR, (Object) null);
        objectEncoderContext2.add(zzaS, (Object) null);
        objectEncoderContext2.add(zzaT, (Object) null);
        objectEncoderContext2.add(zzaU, (Object) null);
        objectEncoderContext2.add(zzaV, (Object) null);
        objectEncoderContext2.add(zzaW, (Object) null);
        objectEncoderContext2.add(zzaX, (Object) null);
        objectEncoderContext2.add(zzaY, (Object) null);
        objectEncoderContext2.add(zzaZ, zzpnVar.zzf());
        objectEncoderContext2.add(zzba, (Object) null);
        objectEncoderContext2.add(zzbb, (Object) null);
        objectEncoderContext2.add(zzbc, (Object) null);
    }
}
